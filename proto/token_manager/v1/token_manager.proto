syntax = "proto3";

package token_manager;

option go_package = "github.com/rongpengju/k4s-api/token_manager/v1";

service TokenManagerService {
  // 检测
  rpc Ping(Req) returns (Resp) {}
  // 查询广告计划学习期状态
  rpc GetAdStatExtraInfo(GetAdStatExtraInfoReq) returns (GetAdStatExtraInfoResp) {}
  // 获取广告主
  rpc FindAdvertiser(FindAdvertiserReq) returns (FindAdvertiserResp) {}
  // 根据广告主获取用户
  rpc FindUser(FindUserReq) returns (FindUserResp) {}
  // 获取行业分类
  rpc FindIndustryList(FindIndustryListReq) returns (FindIndustryListResp) {}
  // 获取日流水
  rpc QianchuanFinanceDetailGet(QianchuanFinanceDetailGetReq) returns (QianchuanFinanceDetailGetResp) {}
  // 获取素材id
  rpc FindMaterial(FindMaterialReq) returns (FindMaterialResp) {}
}

message AdStatExtraList {
  int64 advertiser_id = 1;
  // 该账户下在查询时间内学习成功的计划数
  int32 learned_count = 2;
}

message PageInfo {
  int32 limit = 1;
  int32 page = 2;
  int32 total_count = 3;
}

//广告主
message Advertiser {
  // 广告主账户id
  int64 AdCustomerId = 1;
  // 广告账户名
  string AdCustomerName = 2;
  // 公司名
  string Company = 3;
}

message Pagination {
  int32 limit = 1;
  int32 page = 2;
  int64 total_count = 3;
}

//行业
message Industry {
  //行业ID
  int64 industry_id = 1;
  //行业名称
  string industry_name = 2;
  //所在级别，1：一级行业、2：二级行业、3：三级行业
  int64 level = 3;
  //该行业的一级行业ID
  int64 first_industry_id = 4;
  //该行业的一级行业名称
  string first_industry_name = 5;
  //该行业的二级行业ID
  int64 second_industry_id = 6;
  //该行业的二级行业名称
  string second_industry_name = 7;
  //该行业的三级行业ID
  int64 third_industry_id = 8;
  //该行业的三级行业名称
  string third_industry_name = 9;
  //父id
  int64 pid = 10;
}

//日流水
message FinanceDetail {
  //现金支出(单位元)
  float cash_cost = 1;
  //总支出(单位元)
  float cost = 2;
  //赠款支出(单位元)
  float reward_cost = 3;
  //共享钱包支出
  float shared_wallet_cost = 4;
  //广告主
  int64 advertiser_id = 5;
}

message Material {
  int64 material_id = 1;
  int64 advertiser_id = 2;
  string md5 = 3;
}

message Req {}

message Resp {}

// 查询广告计划学习期状态
message GetAdStatExtraInfoReq {
  // 开始时间(对比计划更新时间)
  string start_time = 1;
  // 结束时间(对比计划更新时间)
  string end_time = 2;
  // 要查询的账户
  repeated int64 advertiser_ids = 3;
  int32 page = 4;
}

message GetAdStatExtraInfoResp {
  repeated AdStatExtraList list = 1;
  PageInfo page_info = 2;
}

// 获取广告主
message FindAdvertiserReq {
  //用户
  repeated int64 user_ids = 1;
  //媒体
  int64 plat_form = 2;
  //资质名称
  repeated string company = 3;
  //架构
  int64 topsign_id = 4;
  //分页
  int32 page = 5;
  //数量
  int32 limit = 6;
  //广告主名称
  string name = 7;
  //品牌id
  int64 client_id = 8;
  //资质id
  int64 customer_id = 9;
}

message FindAdvertiserResp {
  repeated Advertiser advertisers = 1;
  Pagination pagination_offset = 2;
}

// 根据广告主获取用户
message FindUserReq {
  repeated int64 ad_customer_id = 1;
  //媒体
  int64 plat_form = 2;
  //架构
  int64 topsign_id = 3;
}

message FindUserResp {
  repeated int64 user_ids = 1;
}

// 获取行业分类
message FindIndustryListReq {
  //只获取某级别数据，1:第一级,2:第二级,3:第三级，默认都返回
  int64 level = 1;
  //行业名称
  string industry_name = 2;
  //行业id
  int64 industry_id = 3;
  //媒体
  int64 plat_form = 4;
  //父级
  int64 pid = 5;
}

message FindIndustryListResp {
  repeated Industry list = 1;
}

// 获取日流水
message QianchuanFinanceDetailGetReq {
  //广告主
  repeated int64 advertiser_id = 1;
  //开始时间
  string start_time = 2;
  //结束时间
  string end_time = 3;
  //架构
  int64 topsign_id = 4;
  //媒体
  int64 plat_form = 5;
}

message QianchuanFinanceDetailGetResp {
  repeated FinanceDetail finance_list = 1;
}

// 获取素材id
message FindMaterialReq {
  //md5
  repeated string md5 = 1;
  //架构
  int64 topsign_id = 2;
  //媒体
  int64 plat_form = 3;
}

message FindMaterialResp {
  repeated Material material = 1;
}